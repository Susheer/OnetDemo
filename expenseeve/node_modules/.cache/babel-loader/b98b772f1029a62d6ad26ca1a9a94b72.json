{"ast":null,"code":"import _objectSpread from \"F:\\\\expenseeve\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport Axious from \"axios\";\nimport { UpdateBudgetRoute, addCategoryRoute, listCategoryRoute, userLoginRoute, getBudgetRoute, settingsRoute, getSettingsRoute } from \"../config/route\";\nimport { BUDGET_CHANGE, CATEGORY_CHANGE, UPDATE_BUDGET_SUCCESS, UPDATE_BUDGET_FAILED, UPDATING_BUDGET, ADDING_CATEGORY, ADD_CATEGORY_FAILED, FETCHING_CATEGORY_LIST, FETCHING_CATEGORY_LIST_FAILED, FETCHING_CATEGORY_LIST_SUCCESS, USER_LOGINING, USER_LOGINING_FAILED, USER_LOGINING_SUCCESS, USER_ID_ON_CHANGE, PASSWORD_ON_CHANGE, INITILIZE_DASHBOARD, INITILIZE_EXPENSE, INITILIZE_SETTINGS } from \"../config/actionType\";\nexport const budgetOnChange = budget => {\n  return {\n    type: BUDGET_CHANGE,\n    payload: budget\n  };\n};\nexport const categoryOnChange = category => {\n  return {\n    type: CATEGORY_CHANGE,\n    payload: category\n  };\n};\nexport const updateBudget = budget => {\n  console.log(\"[Budget updated thanks]\");\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: UPDATING_BUDGET\n    });\n    Axious.post(UpdateBudgetRoute, {\n      userId: \"sudheergupta@gmnail.com\",\n      budget: budget\n    }).then(response => {\n      console.log(\"Server Respodsfwsnse\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: UPDATE_BUDGET_SUCCESS,\n          payload: serverRes.budget.budget\n        });\n      } else {\n        dispatch({\n          type: UPDATE_BUDGET_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_BUDGET_FAILED,\n        payload: \"Budget updation failed\"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n};\nexport const addCategory = category => {\n  console.log(\"[Budget updated thanks]\");\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: ADDING_CATEGORY\n    });\n    Axious.post(addCategoryRoute, {\n      userId: \"sudheergupta@gmnail.com\",\n      name: category\n    }).then(response => {\n      console.log(\"Add category server response\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: FETCHING_CATEGORY_LIST\n        }); //--------------\n\n        Axious.post(listCategoryRoute).then(response => {\n          if (response.data.success) {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_SUCCESS,\n              payload: response.data.categories\n            });\n          } else {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_FAILED,\n              payload: response.data.details\n            });\n          }\n\n          console.log(\"list find from server--\", response.data);\n        }).catch(function (err) {\n          dispatch({\n            type: FETCHING_CATEGORY_LIST_FAILED,\n            payload: \"Somthing went wrong\"\n          });\n        }); //-------------\n      } else {\n        dispatch({\n          type: ADD_CATEGORY_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: ADD_CATEGORY_FAILED,\n        payload: \"Something went wrong \"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n}; // Login actions\n\nexport const login = (userId, password) => {\n  return dispatch => {\n    dispatch({\n      type: USER_LOGINING\n    });\n    Axious.post(userLoginRoute, {\n      userId: userId,\n      password: password\n    }).then(response => {\n      if (response.data.success) {\n        console.log(\"LoginData\", response.data);\n        dispatch({\n          type: USER_LOGINING_SUCCESS,\n          payload: response.data.userData\n        });\n      } else {\n        dispatch({\n          type: USER_LOGINING_FAILED,\n          payload: response.data.details\n        });\n      }\n    }).catch(function (err) {\n      dispatch({\n        type: USER_LOGINING_FAILED,\n        payload: \"Somthing went wrong \"\n      });\n    });\n  };\n};\nexport const userIdOnChnage = userId => {\n  return {\n    type: USER_ID_ON_CHANGE,\n    payload: userId\n  };\n};\nexport const passwordOnChnage = password => {\n  return {\n    type: PASSWORD_ON_CHANGE,\n    payload: password\n  };\n};\nexport const initializeApp = () => {\n  // settingns app\n  //getBalance\n  Axious.post(getSettingsRoute).then(response => {\n    console.log(\"[Response for getSetting]\", response.data);\n\n    if (response.data.success) {\n      console.log(\"response.data.settingCompData\", response.data.settingCompData);\n      return {\n        type: INITILIZE_SETTINGS,\n        payload: response.data.settingCompData\n      };\n    }\n  }).catch(function (err) {\n    console.log(\"Filed while loading budget\", err);\n  }); // fetch budget\n\n  console.log(\"[Initilizing app 000000000000000000000]\");\n};","map":{"version":3,"sources":["F:\\expenseeve\\src\\actions\\index.js"],"names":["Axious","UpdateBudgetRoute","addCategoryRoute","listCategoryRoute","userLoginRoute","getBudgetRoute","settingsRoute","getSettingsRoute","BUDGET_CHANGE","CATEGORY_CHANGE","UPDATE_BUDGET_SUCCESS","UPDATE_BUDGET_FAILED","UPDATING_BUDGET","ADDING_CATEGORY","ADD_CATEGORY_FAILED","FETCHING_CATEGORY_LIST","FETCHING_CATEGORY_LIST_FAILED","FETCHING_CATEGORY_LIST_SUCCESS","USER_LOGINING","USER_LOGINING_FAILED","USER_LOGINING_SUCCESS","USER_ID_ON_CHANGE","PASSWORD_ON_CHANGE","INITILIZE_DASHBOARD","INITILIZE_EXPENSE","INITILIZE_SETTINGS","budgetOnChange","budget","type","payload","categoryOnChange","category","updateBudget","console","log","dispatch","post","userId","then","response","data","serverRes","success","details","catch","error","addCategory","name","categories","err","login","password","userData","userIdOnChnage","passwordOnChnage","initializeApp","settingCompData"],"mappings":"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","sourcesContent":["import Axious from \"axios\";\r\nimport {\r\n  UpdateBudgetRoute,\r\n  addCategoryRoute,\r\n  listCategoryRoute,\r\n  userLoginRoute,\r\n  getBudgetRoute,\r\n  settingsRoute,\r\n  getSettingsRoute\r\n} from \"../config/route\";\r\nimport {\r\n  BUDGET_CHANGE,\r\n  CATEGORY_CHANGE,\r\n  UPDATE_BUDGET_SUCCESS,\r\n  UPDATE_BUDGET_FAILED,\r\n  UPDATING_BUDGET,\r\n  ADDING_CATEGORY,\r\n  ADD_CATEGORY_FAILED,\r\n  FETCHING_CATEGORY_LIST,\r\n  FETCHING_CATEGORY_LIST_FAILED,\r\n  FETCHING_CATEGORY_LIST_SUCCESS,\r\n  USER_LOGINING,\r\n  USER_LOGINING_FAILED,\r\n  USER_LOGINING_SUCCESS,\r\n  USER_ID_ON_CHANGE,\r\n  PASSWORD_ON_CHANGE,\r\n  INITILIZE_DASHBOARD,\r\n  INITILIZE_EXPENSE,\r\n  INITILIZE_SETTINGS\r\n} from \"../config/actionType\";\r\n\r\nexport const budgetOnChange = budget => {\r\n  return {\r\n    type: BUDGET_CHANGE,\r\n    payload: budget\r\n  };\r\n};\r\n\r\nexport const categoryOnChange = category => {\r\n  return {\r\n    type: CATEGORY_CHANGE,\r\n    payload: category\r\n  };\r\n};\r\n\r\nexport const updateBudget = budget => {\r\n  console.log(\"[Budget updated thanks]\");\r\n\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: UPDATING_BUDGET });\r\n\r\n    Axious.post(UpdateBudgetRoute, {\r\n      userId: \"sudheergupta@gmnail.com\",\r\n      budget: budget\r\n    })\r\n      .then(response => {\r\n        console.log(\"Server Respodsfwsnse\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: UPDATE_BUDGET_SUCCESS,\r\n            payload: serverRes.budget.budget\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: UPDATE_BUDGET_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: UPDATE_BUDGET_FAILED,\r\n          payload: \"Budget updation failed\"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const addCategory = category => {\r\n  console.log(\"[Budget updated thanks]\");\r\n\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: ADDING_CATEGORY });\r\n\r\n    Axious.post(addCategoryRoute, {\r\n      userId: \"sudheergupta@gmnail.com\",\r\n      name: category\r\n    })\r\n      .then(response => {\r\n        console.log(\"Add category server response\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: FETCHING_CATEGORY_LIST\r\n          });\r\n          //--------------\r\n          Axious.post(listCategoryRoute)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                  payload: response.data.categories\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_FAILED,\r\n                  payload: response.data.details\r\n                });\r\n              }\r\n\r\n              console.log(\"list find from server--\", response.data);\r\n            })\r\n            .catch(function(err) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: \"Somthing went wrong\"\r\n              });\r\n            });\r\n\r\n          //-------------\r\n        } else {\r\n          dispatch({\r\n            type: ADD_CATEGORY_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: ADD_CATEGORY_FAILED,\r\n          payload: \"Something went wrong \"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\n// Login actions\r\nexport const login = (userId, password) => {\r\n  return dispatch => {\r\n    dispatch({ type: USER_LOGINING });\r\n\r\n    Axious.post(userLoginRoute, {\r\n      userId: userId,\r\n      password: password\r\n    })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          console.log(\"LoginData\", response.data);\r\n          dispatch({\r\n            type: USER_LOGINING_SUCCESS,\r\n            payload: response.data.userData\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: USER_LOGINING_FAILED,\r\n            payload: response.data.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        dispatch({\r\n          type: USER_LOGINING_FAILED,\r\n          payload: \"Somthing went wrong \"\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const userIdOnChnage = userId => {\r\n  return {\r\n    type: USER_ID_ON_CHANGE,\r\n    payload: userId\r\n  };\r\n};\r\nexport const passwordOnChnage = password => {\r\n  return {\r\n    type: PASSWORD_ON_CHANGE,\r\n    payload: password\r\n  };\r\n};\r\n\r\nexport const initializeApp = () => {\r\n  // settingns app\r\n  //getBalance\r\n  Axious.post(getSettingsRoute)\r\n    .then(response => {\r\n      console.log(\"[Response for getSetting]\", response.data);\r\n      if (response.data.success) {\r\n        console.log(\r\n          \"response.data.settingCompData\",\r\n          response.data.settingCompData\r\n        );\r\n        return {\r\n          type: INITILIZE_SETTINGS,\r\n          payload: response.data.settingCompData\r\n        };\r\n      }\r\n    })\r\n    .catch(function(err) {\r\n      console.log(\"Filed while loading budget\", err);\r\n    });\r\n  // fetch budget\r\n  console.log(\"[Initilizing app 000000000000000000000]\");\r\n};\r\n"]},"metadata":{},"sourceType":"module"}