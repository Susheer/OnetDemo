{"ast":null,"code":"var _jsxFileName = \"F:\\\\expenseeve\\\\src\\\\components\\\\login.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login, userIdOnChnage, passwordOnChnage } from \"../actions\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    console.log(\"Login did mount  this.props\", this.props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"loginRoot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"UserId\", React.createElement(\"input\", {\n      autoComplete: \"false\",\n      type: \"text\",\n      name: \"userId\",\n      value: this.props.userId,\n      onChange: e => {\n        this.props.userIdOnChnage(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" \", \"Password\", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.props.password,\n      onChange: e => {\n        this.props.passwordOnChnage(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"click\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"[State Login component]\", state.authentication);\n  return state.authentication;\n};\n\nexport default connect(mapStateToProps, {\n  login,\n  userIdOnChnage,\n  passwordOnChnage\n})(Login);","map":{"version":3,"sources":["F:\\expenseeve\\src\\components\\login.js"],"names":["React","Component","connect","login","userIdOnChnage","passwordOnChnage","Login","state","componentDidMount","console","log","props","render","userId","e","target","value","password","mapStateToProps","authentication"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,cAAhB,EAAgCC,gBAAhC,QAAwD,YAAxD;;AACA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB,EADoB;AAAA;;AAG5BC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2C,KAAKC,KAAhD;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE;AACE,MAAA,YAAY,EAAC,OADf;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,MAJpB;AAKE,MAAA,QAAQ,EAAEC,CAAC,IAAI;AACb,aAAKH,KAAL,CAAWP,cAAX,CAA0BU,CAAC,CAACC,MAAF,CAASC,KAAnC;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,GADH,cAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWM,QAHpB;AAIE,MAAA,QAAQ,EAAEH,CAAC,IAAI;AACb,aAAKH,KAAL,CAAWN,gBAAX,CAA4BS,CAAC,CAACC,MAAF,CAASC,KAArC;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAbF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADF;AA8BD;;AArC2B;;AAuC9B,MAAME,eAAe,GAAGX,KAAK,IAAI;AAC/BE,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,KAAK,CAACY,cAA7C;AACA,SAAOZ,KAAK,CAACY,cAAb;AACD,CAHD;;AAIA,eAAejB,OAAO,CACpBgB,eADoB,EAEpB;AAAEf,EAAAA,KAAF;AAASC,EAAAA,cAAT;AAAyBC,EAAAA;AAAzB,CAFoB,CAAP,CAGbC,KAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, userIdOnChnage, passwordOnChnage } from \"../actions\";\r\nclass Login extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    console.log(\"Login did mount  this.props\", this.props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"loginRoot\">\r\n        <label>\r\n          UserId\r\n          <input\r\n            autoComplete=\"false\"\r\n            type=\"text\"\r\n            name=\"userId\"\r\n            value={this.props.userId}\r\n            onChange={e => {\r\n              this.props.userIdOnChnage(e.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n        <label>\r\n          {\" \"}\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={this.props.password}\r\n            onChange={e => {\r\n              this.props.passwordOnChnage(e.target.value);\r\n            }}\r\n          />\r\n        </label>\r\n        <br />\r\n        <input type=\"submit\" value=\"click\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  console.log(\"[State Login component]\", state.authentication);\r\n  return state.authentication;\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login, userIdOnChnage, passwordOnChnage }\r\n)(Login);\r\n"]},"metadata":{},"sourceType":"module"}