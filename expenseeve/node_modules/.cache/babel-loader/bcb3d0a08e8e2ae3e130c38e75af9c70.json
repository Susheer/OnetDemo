{"ast":null,"code":"import _objectSpread from \"F:\\\\expenseeve\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"F:\\\\expenseeve\\\\src\\\\components\\\\dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport DoughnutChart from \"./chartDonught\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginRoute } from \"../config/route\";\nimport { populateActiveCategory, itemOnChnage, expenseOnChnage, onSelectItem, onAddExpenseClick, loadExpenses, editExpense } from \"../actions\";\nlet styles = {\n  deleteBtnStyle: {\n    cursor: \"pointer\"\n  },\n  editBtnStyle: {\n    cursor: \"pointer\"\n  },\n  undoBtnStyle: {\n    cursor: \"pointer\"\n  },\n  addExpBtnStyle: {\n    border: \"border: 1px solid #eee\",\n    boxShadow: \" 0 2px 3px #ccc\",\n    borderRadius: \"0\"\n  }\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.onIteamChange = e => {\n      console.log(\"[Onchange]\", e.target.value);\n    };\n\n    this.handleAddExpense = () => {\n      this.handleShow();\n      this.props.populateActiveCategory();\n    };\n\n    this.Categoryoptions = [];\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.onSelect = e => {\n      alert(e.target.value);\n    };\n\n    this.renderaddBody = () => {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"dropdownStyle\",\n        onChange: e => {\n          // this.onSelect(e);\n          this.props.onSelectItem(e.target.value);\n        },\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Select category\"), this.populateCategory()), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"iteamName\",\n        placeholder: \" Item name\",\n        value: this.props.selectedItem,\n        onChange: e => {\n          this.props.itemOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        placeholder: \" Amount \",\n        value: this.props.expenseAmount,\n        onChange: e => {\n          this.props.expenseOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \" \", this.props.error), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \" \", this.props.message, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }));\n    };\n\n    this.renderEditPOPUP = () => {\n      if (this.props.editExpenseLoader) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, \"Processing...\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"dropdownStyle\",\n        onChange: e => {\n          // this.onSelect(e);\n          this.props.onSelectItem(e.target.value);\n        },\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"Select category\"), this.populateCategory()), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"iteamName\",\n        placeholder: \" Item name\",\n        value: this.props.selectedItem,\n        onChange: e => {\n          this.props.itemOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        placeholder: \" Amount \",\n        value: this.props.expenseAmount,\n        onChange: e => {\n          this.props.expenseOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \" \", this.props.error), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \" \", this.props.message, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }));\n    };\n\n    this.renderExpensePopup = props => {\n      return React.createElement(Modal, {\n        show: this.state.show,\n        style: {\n          border: \"1px soild red\"\n        },\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Add Expense\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, this.renderaddBody()), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn card\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn card\",\n        onClick: e => {\n          let reqBody = {\n            iteamName: this.props.selectedItem,\n            amount: this.props.expenseAmount,\n            categoryName: this.props.selectedCategory\n          };\n          this.props.onAddExpenseClick(reqBody);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Save Changes\")));\n    };\n  }\n\n  renderAddExpenseButton() {\n    //------------\n    return React.createElement(\"button\", {\n      value: \"addExpense\",\n      className: \"buttonStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Add Expense\"); //-------------\n  }\n\n  componentDidMount() {\n    console.log(\"[DASHBOARD] comDidMnt: this.props\", this.props);\n  } //authentication\n\n\n  redirectToLoginIfNotLogin(isLogin) {\n    console.log(\"redirectToLoginIfNotLogin \", !isLogin);\n\n    if (!isLogin) {\n      //  this.props.initializeApp();\n      console.log(\"[RedirectTo] Login page\");\n      return React.createElement(Redirect, {\n        to: loginRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n  }\n\n  populateCategory() {\n    let categoryDataset = [];\n    let options = [];\n    if (this.props.categories) categoryDataset = this.props.categories;\n    return categoryDataset.map(category => {\n      if (this.props.selectedCategory) {\n        if (category.name === this.props.selectedCategory) {\n          return React.createElement(\"option\", {\n            defaultValue: category.name,\n            selected: this.props.selectedCategory == category.name,\n            key: category._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, category.name);\n        }\n      }\n\n      return React.createElement(\"option\", {\n        value: category.name,\n        key: category._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, category.name);\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.doesNewExpenseAdded) {\n      // alert(\"new Item Added\");\n      this.props.loadExpenses();\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadExpenses();\n  }\n\n  renderExpenseTable() {\n    let expenses = this.props.expenses;\n    const deleteBtnStyle = styles.deleteBtnStyle,\n          undoBtnStyle = styles.undoBtnStyle,\n          editBtnStyle = styles.editBtnStyle; //console.log(\"[Dashboard Render]\", expenses);\n\n    return expenses.map((expense, index) => {\n      let date = new Date(expense.expenseDate);\n      let trnsDate = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n\n      if (expense.deleted) {\n        return React.createElement(\"tr\", {\n          className: \"strikeout\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, expense.categoryName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, expense.iteamName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, expense.amount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, trnsDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          id: expense._id,\n          className: \"fas fa-undo\",\n          title: \"Undo changes\",\n          style: undoBtnStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, expense.categoryName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, expense.iteamName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, expense.amount), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, trnsDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        id: expense._id,\n        onClick: e => {\n          this.props.editExpense(e.target.id);\n          this.props.populateActiveCategory();\n          this.handleShow();\n        },\n        className: \"fas fa-pen\",\n        style: editBtnStyle,\n        title: \"Edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), \" \", \"|\", \" \", React.createElement(\"i\", {\n        id: expense._id,\n        className: \"fas fa-trash-alt\",\n        title: \"Delete\",\n        style: deleteBtnStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })));\n    });\n  }\n\n  render() {\n    // let tdStyle = { boxShadow: \"0 .125rem .25rem rgba(0,0,0,.075) !important\" };\n    const addExpBtnStyle = styles.addExpBtnStyle;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, this.redirectToLoginIfNotLogin(this.props.isLogin), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Budget Overview\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        marginLeft: \"0\",\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-8 col-md-8 col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(DoughnutChart, {\n      label: \"25% spent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" col-xs-12 col-sm-4 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Total budget\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Rs\"), \"2000000\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Total Expense\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, \"Rs\"), \"12000000\")))))), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Category wise split\"), React.createElement(\"h5\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Special title treatment\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      style: addExpBtnStyle,\n      className: \"btn \",\n      onClick: e => {\n        this.handleAddExpense();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, \"Add Expense\"))), React.createElement(\"div\", {\n      className: \"row customeCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, \"Item name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, \"Expense date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, this.renderExpenseTable()))), this.renderExpensePopup(this.props));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"[State dashboard]\", state);\n  return _objectSpread({}, state.dashBoard, {\n    isLogin: state.authentication.isSessionActive\n  });\n};\n\nexport default connect(mapStateToProps, {\n  populateActiveCategory,\n  itemOnChnage,\n  expenseOnChnage,\n  onSelectItem,\n  onAddExpenseClick,\n  loadExpenses,\n  editExpense\n})(Dashboard);","map":{"version":3,"sources":["F:\\expenseeve\\src\\components\\dashboard.js"],"names":["React","Component","connect","Modal","DoughnutChart","Redirect","loginRoute","populateActiveCategory","itemOnChnage","expenseOnChnage","onSelectItem","onAddExpenseClick","loadExpenses","editExpense","styles","deleteBtnStyle","cursor","editBtnStyle","undoBtnStyle","addExpBtnStyle","border","boxShadow","borderRadius","Dashboard","state","show","onIteamChange","e","console","log","target","value","handleAddExpense","handleShow","props","Categoryoptions","handleClose","setState","onSelect","alert","renderaddBody","width","populateCategory","selectedItem","expenseAmount","color","error","message","renderEditPOPUP","editExpenseLoader","renderExpensePopup","reqBody","iteamName","amount","categoryName","selectedCategory","renderAddExpenseButton","componentDidMount","redirectToLoginIfNotLogin","isLogin","categoryDataset","options","categories","map","category","name","_id","componentDidUpdate","doesNewExpenseAdded","renderExpenseTable","expenses","expense","index","date","Date","expenseDate","trnsDate","getDate","getMonth","getFullYear","deleted","id","render","marginLeft","paddingLeft","mapStateToProps","dashBoard","authentication","isSessionActive"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DoughnutChart from \"./chartDonught\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginRoute } from \"../config/route\";\r\nimport {\r\n  populateActiveCategory,\r\n  itemOnChnage,\r\n  expenseOnChnage,\r\n  onSelectItem,\r\n  onAddExpenseClick,\r\n  loadExpenses,\r\n  editExpense\r\n} from \"../actions\";\r\n\r\nlet styles = {\r\n  deleteBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  editBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  undoBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  addExpBtnStyle: {\r\n    border: \"border: 1px solid #eee\",\r\n    boxShadow: \" 0 2px 3px #ccc\",\r\n    borderRadius: \"0\"\r\n  }\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n\r\n  renderAddExpenseButton() {\r\n    //------------\r\n    return (\r\n      <button value=\"addExpense\" className=\"buttonStyle\">\r\n        Add Expense\r\n      </button>\r\n    );\r\n    //-------------\r\n  }\r\n  onIteamChange = e => {\r\n    console.log(\"[Onchange]\", e.target.value);\r\n  };\r\n\r\n  handleAddExpense = () => {\r\n    this.handleShow();\r\n    this.props.populateActiveCategory();\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"[DASHBOARD] comDidMnt: this.props\", this.props);\r\n  } //authentication\r\n  redirectToLoginIfNotLogin(isLogin) {\r\n    console.log(\"redirectToLoginIfNotLogin \", !isLogin);\r\n    if (!isLogin) {\r\n      //  this.props.initializeApp();\r\n\r\n      console.log(\"[RedirectTo] Login page\");\r\n      return <Redirect to={loginRoute} />;\r\n    }\r\n  }\r\n  Categoryoptions = [];\r\n  populateCategory() {\r\n    let categoryDataset = [];\r\n    let options = [];\r\n\r\n    if (this.props.categories) categoryDataset = this.props.categories;\r\n\r\n    return categoryDataset.map(category => {\r\n      if (this.props.selectedCategory) {\r\n        if (category.name === this.props.selectedCategory) {\r\n          return (\r\n            <option\r\n              defaultValue={category.name}\r\n              selected={this.props.selectedCategory == category.name}\r\n              key={category._id}\r\n            >\r\n              {category.name}\r\n            </option>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <option value={category.name} key={category._id}>\r\n          {category.name}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.doesNewExpenseAdded) {\r\n      // alert(\"new Item Added\");\r\n      this.props.loadExpenses();\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  onSelect = e => {\r\n    alert(e.target.value);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadExpenses();\r\n  }\r\n\r\n  renderExpenseTable() {\r\n    let { expenses } = this.props;\r\n\r\n    const { deleteBtnStyle, undoBtnStyle, editBtnStyle } = styles;\r\n    //console.log(\"[Dashboard Render]\", expenses);\r\n\r\n    return expenses.map((expense, index) => {\r\n      let date = new Date(expense.expenseDate);\r\n      let trnsDate =\r\n        date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\r\n\r\n      if (expense.deleted) {\r\n        return (\r\n          <tr className=\"strikeout\" key={index}>\r\n            <td>{expense.categoryName}</td>\r\n            <td>{expense.iteamName}</td>\r\n            <td>{expense.amount}</td>\r\n            <td>{trnsDate}</td>\r\n            <td>\r\n              <i\r\n                id={expense._id}\r\n                className=\"fas fa-undo\"\r\n                title=\"Undo changes\"\r\n                style={undoBtnStyle}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <tr key={index}>\r\n          <td>{expense.categoryName}</td>\r\n          <td>{expense.iteamName}</td>\r\n          <td>{expense.amount}</td>\r\n          <td>{trnsDate}</td>\r\n          <td>\r\n            <i\r\n              id={expense._id}\r\n              onClick={e => {\r\n                this.props.editExpense(e.target.id);\r\n                this.props.populateActiveCategory();\r\n                this.handleShow();\r\n              }}\r\n              className=\"fas fa-pen\"\r\n              style={editBtnStyle}\r\n              title=\"Edit\"\r\n            />{\" \"}\r\n            |{\" \"}\r\n            <i\r\n              id={expense._id}\r\n              className=\"fas fa-trash-alt\"\r\n              title=\"Delete\"\r\n              style={deleteBtnStyle}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderaddBody = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" />\r\n        <div className=\"col-md-8\">\r\n          <select\r\n            className=\"dropdownStyle\"\r\n            onChange={e => {\r\n              // this.onSelect(e);\r\n              this.props.onSelectItem(e.target.value);\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <option value=\"1\">Select category</option>\r\n\r\n            {this.populateCategory()}\r\n          </select>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"iteamName\"\r\n            placeholder=\" Item name\"\r\n            value={this.props.selectedItem}\r\n            onChange={e => {\r\n              this.props.itemOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            placeholder=\" Amount \"\r\n            value={this.props.expenseAmount}\r\n            onChange={e => {\r\n              this.props.expenseOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <br />\r\n          <p className=\"text-center\" style={{ color: \"red\" }}>\r\n            {\" \"}\r\n            {this.props.error}\r\n          </p>\r\n          <p className=\"text-center\" style={{ color: \"green\" }}>\r\n            {\" \"}\r\n            {this.props.message}{\" \"}\r\n          </p>\r\n\r\n          <br />\r\n        </div>\r\n        <div className=\"col-md-2\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderEditPOPUP = () => {\r\n    if (this.props.editExpenseLoader) {\r\n      return <p>Processing...</p>;\r\n    }\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-2\" />\r\n        <div className=\"col-md-8\">\r\n          <select\r\n            className=\"dropdownStyle\"\r\n            onChange={e => {\r\n              // this.onSelect(e);\r\n              this.props.onSelectItem(e.target.value);\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <option value=\"1\">Select category</option>\r\n\r\n            {this.populateCategory()}\r\n          </select>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"iteamName\"\r\n            placeholder=\" Item name\"\r\n            value={this.props.selectedItem}\r\n            onChange={e => {\r\n              this.props.itemOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            placeholder=\" Amount \"\r\n            value={this.props.expenseAmount}\r\n            onChange={e => {\r\n              this.props.expenseOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <br />\r\n          <p className=\"text-center\" style={{ color: \"red\" }}>\r\n            {\" \"}\r\n            {this.props.error}\r\n          </p>\r\n          <p className=\"text-center\" style={{ color: \"green\" }}>\r\n            {\" \"}\r\n            {this.props.message}{\" \"}\r\n          </p>\r\n\r\n          <br />\r\n        </div>\r\n        <div className=\"col-md-2\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderExpensePopup = props => {\r\n    return (\r\n      <Modal\r\n        show={this.state.show}\r\n        style={{ border: \"1px soild red\" }}\r\n        onHide={this.handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.renderaddBody()}</Modal.Body>\r\n        <Modal.Footer>\r\n          <button type=\"button\" className=\"btn card\" onClick={this.handleClose}>\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn card\"\r\n            onClick={e => {\r\n              let reqBody = {\r\n                iteamName: this.props.selectedItem,\r\n                amount: this.props.expenseAmount,\r\n                categoryName: this.props.selectedCategory\r\n              };\r\n\r\n              this.props.onAddExpenseClick(reqBody);\r\n            }}\r\n          >\r\n            Save Changes\r\n          </button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // let tdStyle = { boxShadow: \"0 .125rem .25rem rgba(0,0,0,.075) !important\" };\r\n\r\n    const { addExpBtnStyle } = styles;\r\n    return (\r\n      <div className=\"container\">\r\n        {this.redirectToLoginIfNotLogin(this.props.isLogin)}\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Budget Overview</div>\r\n\r\n              <div\r\n                className=\"card-body\"\r\n                style={{ marginLeft: \"0\", paddingLeft: \"0\" }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12 col-sm-8 col-md-8 col-lg-8\">\r\n                    <DoughnutChart label=\"25% spent\" />\r\n                  </div>\r\n                  <div className=\" col-xs-12 col-sm-4 col-md-4 col-lg-4\">\r\n                    <p>Total budget</p>\r\n                    <p>\r\n                      <strong>Rs</strong>2000000\r\n                    </p>\r\n                    <p>Total Expense</p>\r\n                    <p>\r\n                      <strong>Rs</strong>12000000\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Category wise split</div>\r\n              <h5 className=\"card-body\">Special title treatment</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <button\r\n              type=\"button\"\r\n              style={addExpBtnStyle}\r\n              className=\"btn \"\r\n              onClick={e => {\r\n                this.handleAddExpense();\r\n              }}\r\n            >\r\n              Add Expense\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row customeCard\">\r\n          {/* table */}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Category</th>\r\n                <th>Item name</th>\r\n                <th>Amount</th>\r\n                <th>Expense date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderExpenseTable()}</tbody>\r\n          </table>\r\n        </div>\r\n        {/* popup for expense */}\r\n        {this.renderExpensePopup(this.props)}\r\n        {/* pop ende here..*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"[State dashboard]\", state);\r\n\r\n  return { ...state.dashBoard, isLogin: state.authentication.isSessionActive };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    populateActiveCategory,\r\n    itemOnChnage,\r\n    expenseOnChnage,\r\n    onSelectItem,\r\n    onAddExpenseClick,\r\n    loadExpenses,\r\n    editExpense\r\n  }\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}