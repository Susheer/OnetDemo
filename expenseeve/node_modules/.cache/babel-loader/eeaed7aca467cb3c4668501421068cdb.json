{"ast":null,"code":"import _objectSpread from \"F:\\\\expenseeve\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"F:\\\\expenseeve\\\\src\\\\components\\\\dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-bootstrap/Modal\";\nimport DoughnutChart from \"./chartDonught\";\nimport { Redirect } from \"react-router-dom\";\nimport { loginRoute } from \"../config/route\";\nimport { populateActiveCategory, itemOnChnage, expenseOnChnage, onSelectItem, onAddExpenseClick, loadExpenses, editExpense, onUpdateClick } from \"../actions\";\nlet styles = {\n  deleteBtnStyle: {\n    cursor: \"pointer\"\n  },\n  editBtnStyle: {\n    cursor: \"pointer\"\n  },\n  undoBtnStyle: {\n    cursor: \"pointer\"\n  },\n  addExpBtnStyle: {\n    border: \"border: 1px solid #eee\",\n    boxShadow: \" 0 2px 3px #ccc\",\n    borderRadius: \"0\"\n  }\n};\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.onIteamChange = e => {\n      console.log(\"[Onchange]\", e.target.value);\n    };\n\n    this.handleAddExpense = () => {\n      this.doesUpdate = false;\n      this.handleShow();\n      this.props.populateActiveCategory();\n    };\n\n    this.Categoryoptions = [];\n\n    this.renderPopupControlles = () => {\n      if (this.doesUpdate) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn card\",\n          onClick: e => {\n            let reqBody = {\n              iteamName: this.props.selectedItem,\n              amount: this.props.expenseAmount,\n              categoryName: this.props.selectedCategory,\n              expenseId: this.props.expenseId\n            };\n            this.props.onUpdateClick(reqBody);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Apply Changes\");\n      } else {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn card\",\n          onClick: e => {\n            let reqBody = {\n              iteamName: this.props.selectedItem,\n              amount: this.props.expenseAmount,\n              categoryName: this.props.selectedCategory\n            };\n            this.props.onAddExpenseClick(reqBody);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"Save Changes\");\n      }\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.handleShow = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.onSelect = e => {\n      alert(e.target.value);\n    };\n\n    this.renderaddBody = () => {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.props.selectedCategory,\n        className: \"dropdownStyle\",\n        onChange: e => {\n          // this.onSelect(e);\n          this.props.onSelectItem(e.target.value);\n        },\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Select category\"), this.populateCategory()), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"iteamName\",\n        placeholder: \" Item name\",\n        value: this.props.selectedItem,\n        onChange: e => {\n          this.props.itemOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"amount\",\n        placeholder: \" Amount \",\n        value: this.props.expenseAmount,\n        onChange: e => {\n          this.props.expenseOnChnage(e.target.value);\n        },\n        className: \"textBoxStyle\",\n        style: {\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \" \", this.props.error), React.createElement(\"p\", {\n        className: \"text-center\",\n        style: {\n          color: \"green\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \" \", this.props.message, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }));\n    };\n\n    this.renderExpensePopup = props => {\n      return React.createElement(Modal, {\n        show: this.state.show,\n        style: {\n          border: \"1px soild red\"\n        },\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, \"Add Expense\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, this.renderaddBody()), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn card\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Close\"), this.renderPopupControlles()));\n    };\n  }\n\n  renderAddExpenseButton() {\n    //------------\n    return React.createElement(\"button\", {\n      value: \"addExpense\",\n      className: \"buttonStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Add Expense\"); //-------------\n  }\n\n  componentDidMount() {\n    console.log(\"[DASHBOARD] comDidMnt: this.props\", this.props);\n  } //authentication\n\n\n  redirectToLoginIfNotLogin(isLogin) {\n    console.log(\"redirectToLoginIfNotLogin \", !isLogin);\n\n    if (!isLogin) {\n      //  this.props.initializeApp();\n      console.log(\"[RedirectTo] Login page\");\n      return React.createElement(Redirect, {\n        to: loginRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    }\n  }\n\n  populateCategory() {\n    let categoryDataset = [];\n    let options = [];\n    if (this.props.categories) categoryDataset = this.props.categories;\n    return categoryDataset.map(category => {\n      if (this.props.selectedCategory) {\n        if (category.name === this.props.selectedCategory) {\n          return React.createElement(\"option\", {\n            defaultValue: category.name,\n            key: category._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }, category.name);\n        }\n      }\n\n      return React.createElement(\"option\", {\n        value: category.name,\n        key: category._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, category.name);\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.doesNewExpenseAdded) {\n      // alert(\"new Item Added\");\n      this.props.loadExpenses();\n    }\n  }\n\n  componentDidMount() {\n    this.props.loadExpenses();\n  }\n\n  renderExpenseTable() {\n    let expenses = this.props.expenses;\n    const deleteBtnStyle = styles.deleteBtnStyle,\n          undoBtnStyle = styles.undoBtnStyle,\n          editBtnStyle = styles.editBtnStyle; //console.log(\"[Dashboard Render]\", expenses);\n\n    return expenses.map((expense, index) => {\n      let date = new Date(expense.expenseDate);\n      let trnsDate = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n\n      if (expense.deleted) {\n        return React.createElement(\"tr\", {\n          className: \"strikeout\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, expense.categoryName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, expense.iteamName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, expense.amount), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, trnsDate), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          id: expense._id,\n          className: \"fas fa-undo\",\n          title: \"Undo changes\",\n          style: undoBtnStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, expense.categoryName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, expense.iteamName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, expense.amount), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, trnsDate), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        id: expense._id,\n        onClick: e => {\n          this.doesUpdate = true;\n          this.props.editExpense(e.target.id);\n          this.props.populateActiveCategory();\n          this.handleShow();\n        },\n        className: \"fas fa-pen\",\n        style: editBtnStyle,\n        title: \"Edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), \" \", \"|\", \" \", React.createElement(\"i\", {\n        id: expense._id,\n        className: \"fas fa-trash-alt\",\n        title: \"Delete\",\n        style: deleteBtnStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })));\n    });\n  }\n\n  render() {\n    // let tdStyle = { boxShadow: \"0 .125rem .25rem rgba(0,0,0,.075) !important\" };\n    const addExpBtnStyle = styles.addExpBtnStyle;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, this.redirectToLoginIfNotLogin(this.props.isLogin), React.createElement(\"div\", {\n      className: \"row mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Budget Overview\"), React.createElement(\"div\", {\n      className: \"card-body\",\n      style: {\n        marginLeft: \"0\",\n        paddingLeft: \"0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-12 col-sm-8 col-md-8 col-lg-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(DoughnutChart, {\n      label: \"25% spent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \" col-xs-12 col-sm-4 col-md-4 col-lg-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"Total budget\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Rs\"), \"2000000\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Total Expense\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Rs\"), \"12000000\")))))), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"Category wise split\"), React.createElement(\"h5\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Special title treatment\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      style: addExpBtnStyle,\n      className: \"btn \",\n      onClick: e => {\n        this.handleAddExpense();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Add Expense\"))), React.createElement(\"div\", {\n      className: \"row customeCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, \"Item name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, \"Expense date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, \"Action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, this.renderExpenseTable()))), this.renderExpensePopup(this.props));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(\"[State dashboard]\", state);\n  return _objectSpread({}, state.dashBoard, {\n    isLogin: state.authentication.isSessionActive\n  });\n};\n\nexport default connect(mapStateToProps, {\n  populateActiveCategory,\n  itemOnChnage,\n  expenseOnChnage,\n  onSelectItem,\n  onAddExpenseClick,\n  loadExpenses,\n  editExpense,\n  onUpdateClick\n})(Dashboard);","map":{"version":3,"sources":["F:\\expenseeve\\src\\components\\dashboard.js"],"names":["React","Component","connect","Modal","DoughnutChart","Redirect","loginRoute","populateActiveCategory","itemOnChnage","expenseOnChnage","onSelectItem","onAddExpenseClick","loadExpenses","editExpense","onUpdateClick","styles","deleteBtnStyle","cursor","editBtnStyle","undoBtnStyle","addExpBtnStyle","border","boxShadow","borderRadius","Dashboard","state","show","onIteamChange","e","console","log","target","value","handleAddExpense","doesUpdate","handleShow","props","Categoryoptions","renderPopupControlles","reqBody","iteamName","selectedItem","amount","expenseAmount","categoryName","selectedCategory","expenseId","handleClose","setState","onSelect","alert","renderaddBody","display","flexDirection","justifyContent","width","populateCategory","color","error","message","renderExpensePopup","renderAddExpenseButton","componentDidMount","redirectToLoginIfNotLogin","isLogin","categoryDataset","options","categories","map","category","name","_id","componentDidUpdate","doesNewExpenseAdded","renderExpenseTable","expenses","expense","index","date","Date","expenseDate","trnsDate","getDate","getMonth","getFullYear","deleted","id","render","marginLeft","paddingLeft","mapStateToProps","dashBoard","authentication","isSessionActive"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport DoughnutChart from \"./chartDonught\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginRoute } from \"../config/route\";\r\nimport {\r\n  populateActiveCategory,\r\n  itemOnChnage,\r\n  expenseOnChnage,\r\n  onSelectItem,\r\n  onAddExpenseClick,\r\n  loadExpenses,\r\n  editExpense,\r\n  onUpdateClick\r\n} from \"../actions\";\r\n\r\nlet styles = {\r\n  deleteBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  editBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  undoBtnStyle: {\r\n    cursor: \"pointer\"\r\n  },\r\n  addExpBtnStyle: {\r\n    border: \"border: 1px solid #eee\",\r\n    boxShadow: \" 0 2px 3px #ccc\",\r\n    borderRadius: \"0\"\r\n  }\r\n};\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n\r\n  renderAddExpenseButton() {\r\n    //------------\r\n    return (\r\n      <button value=\"addExpense\" className=\"buttonStyle\">\r\n        Add Expense\r\n      </button>\r\n    );\r\n    //-------------\r\n  }\r\n  onIteamChange = e => {\r\n    console.log(\"[Onchange]\", e.target.value);\r\n  };\r\n\r\n  handleAddExpense = () => {\r\n    this.doesUpdate = false;\r\n    this.handleShow();\r\n    this.props.populateActiveCategory();\r\n  };\r\n  componentDidMount() {\r\n    console.log(\"[DASHBOARD] comDidMnt: this.props\", this.props);\r\n  } //authentication\r\n  redirectToLoginIfNotLogin(isLogin) {\r\n    console.log(\"redirectToLoginIfNotLogin \", !isLogin);\r\n    if (!isLogin) {\r\n      //  this.props.initializeApp();\r\n\r\n      console.log(\"[RedirectTo] Login page\");\r\n      return <Redirect to={loginRoute} />;\r\n    }\r\n  }\r\n  Categoryoptions = [];\r\n  populateCategory() {\r\n    let categoryDataset = [];\r\n    let options = [];\r\n\r\n    if (this.props.categories) categoryDataset = this.props.categories;\r\n\r\n    return categoryDataset.map(category => {\r\n      if (this.props.selectedCategory) {\r\n        if (category.name === this.props.selectedCategory) {\r\n          return (\r\n            <option defaultValue={category.name} key={category._id}>\r\n              {category.name}\r\n            </option>\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <option value={category.name} key={category._id}>\r\n          {category.name}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPopupControlles = () => {\r\n    if (this.doesUpdate) {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn card\"\r\n          onClick={e => {\r\n            let reqBody = {\r\n              iteamName: this.props.selectedItem,\r\n              amount: this.props.expenseAmount,\r\n              categoryName: this.props.selectedCategory,\r\n              expenseId: this.props.expenseId\r\n            };\r\n\r\n            this.props.onUpdateClick(reqBody);\r\n          }}\r\n        >\r\n          Apply Changes\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn card\"\r\n          onClick={e => {\r\n            let reqBody = {\r\n              iteamName: this.props.selectedItem,\r\n              amount: this.props.expenseAmount,\r\n              categoryName: this.props.selectedCategory\r\n            };\r\n\r\n            this.props.onAddExpenseClick(reqBody);\r\n          }}\r\n        >\r\n          Save Changes\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.doesNewExpenseAdded) {\r\n      // alert(\"new Item Added\");\r\n      this.props.loadExpenses();\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  onSelect = e => {\r\n    alert(e.target.value);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.loadExpenses();\r\n  }\r\n\r\n  renderExpenseTable() {\r\n    let { expenses } = this.props;\r\n\r\n    const { deleteBtnStyle, undoBtnStyle, editBtnStyle } = styles;\r\n    //console.log(\"[Dashboard Render]\", expenses);\r\n\r\n    return expenses.map((expense, index) => {\r\n      let date = new Date(expense.expenseDate);\r\n      let trnsDate =\r\n        date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\r\n\r\n      if (expense.deleted) {\r\n        return (\r\n          <tr className=\"strikeout\" key={index}>\r\n            <td>{expense.categoryName}</td>\r\n            <td>{expense.iteamName}</td>\r\n            <td>{expense.amount}</td>\r\n            <td>{trnsDate}</td>\r\n            <td>\r\n              <i\r\n                id={expense._id}\r\n                className=\"fas fa-undo\"\r\n                title=\"Undo changes\"\r\n                style={undoBtnStyle}\r\n              />\r\n            </td>\r\n          </tr>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <tr key={index}>\r\n          <td>{expense.categoryName}</td>\r\n          <td>{expense.iteamName}</td>\r\n          <td>{expense.amount}</td>\r\n          <td>{trnsDate}</td>\r\n          <td>\r\n            <i\r\n              id={expense._id}\r\n              onClick={e => {\r\n                this.doesUpdate = true;\r\n                this.props.editExpense(e.target.id);\r\n                this.props.populateActiveCategory();\r\n                this.handleShow();\r\n              }}\r\n              className=\"fas fa-pen\"\r\n              style={editBtnStyle}\r\n              title=\"Edit\"\r\n            />{\" \"}\r\n            |{\" \"}\r\n            <i\r\n              id={expense._id}\r\n              className=\"fas fa-trash-alt\"\r\n              title=\"Delete\"\r\n              style={deleteBtnStyle}\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderaddBody = () => {\r\n    return (\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\"\r\n        }}\r\n      >\r\n        <div className=\"col-md-2\" />\r\n        <div className=\"col-md-8\">\r\n          <select\r\n            value={this.props.selectedCategory}\r\n            className=\"dropdownStyle\"\r\n            onChange={e => {\r\n              // this.onSelect(e);\r\n              this.props.onSelectItem(e.target.value);\r\n            }}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <option value=\"1\">Select category</option>\r\n\r\n            {this.populateCategory()}\r\n          </select>\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"iteamName\"\r\n            placeholder=\" Item name\"\r\n            value={this.props.selectedItem}\r\n            onChange={e => {\r\n              this.props.itemOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <input\r\n            type=\"text\"\r\n            name=\"amount\"\r\n            placeholder=\" Amount \"\r\n            value={this.props.expenseAmount}\r\n            onChange={e => {\r\n              this.props.expenseOnChnage(e.target.value);\r\n            }}\r\n            className=\"textBoxStyle\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n\r\n          <br />\r\n          <p className=\"text-center\" style={{ color: \"red\" }}>\r\n            {\" \"}\r\n            {this.props.error}\r\n          </p>\r\n          <p className=\"text-center\" style={{ color: \"green\" }}>\r\n            {\" \"}\r\n            {this.props.message}{\" \"}\r\n          </p>\r\n\r\n          <br />\r\n        </div>\r\n        <div className=\"col-md-2\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderExpensePopup = props => {\r\n    return (\r\n      <Modal\r\n        show={this.state.show}\r\n        style={{ border: \"1px soild red\" }}\r\n        onHide={this.handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Expense</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.renderaddBody()}</Modal.Body>\r\n        <Modal.Footer>\r\n          <button type=\"button\" className=\"btn card\" onClick={this.handleClose}>\r\n            Close\r\n          </button>\r\n          {this.renderPopupControlles()}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    // let tdStyle = { boxShadow: \"0 .125rem .25rem rgba(0,0,0,.075) !important\" };\r\n\r\n    const { addExpBtnStyle } = styles;\r\n    return (\r\n      <div className=\"container\">\r\n        {this.redirectToLoginIfNotLogin(this.props.isLogin)}\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Budget Overview</div>\r\n\r\n              <div\r\n                className=\"card-body\"\r\n                style={{ marginLeft: \"0\", paddingLeft: \"0\" }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-xs-12 col-sm-8 col-md-8 col-lg-8\">\r\n                    <DoughnutChart label=\"25% spent\" />\r\n                  </div>\r\n                  <div className=\" col-xs-12 col-sm-4 col-md-4 col-lg-4\">\r\n                    <p>Total budget</p>\r\n                    <p>\r\n                      <strong>Rs</strong>2000000\r\n                    </p>\r\n                    <p>Total Expense</p>\r\n                    <p>\r\n                      <strong>Rs</strong>12000000\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">Category wise split</div>\r\n              <h5 className=\"card-body\">Special title treatment</h5>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div className=\"col-md-3\">\r\n            <button\r\n              type=\"button\"\r\n              style={addExpBtnStyle}\r\n              className=\"btn \"\r\n              onClick={e => {\r\n                this.handleAddExpense();\r\n              }}\r\n            >\r\n              Add Expense\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row customeCard\">\r\n          {/* table */}\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Category</th>\r\n                <th>Item name</th>\r\n                <th>Amount</th>\r\n                <th>Expense date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{this.renderExpenseTable()}</tbody>\r\n          </table>\r\n        </div>\r\n        {/* popup for expense */}\r\n        {this.renderExpensePopup(this.props)}\r\n        {/* pop ende here..*/}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"[State dashboard]\", state);\r\n\r\n  return { ...state.dashBoard, isLogin: state.authentication.isSessionActive };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    populateActiveCategory,\r\n    itemOnChnage,\r\n    expenseOnChnage,\r\n    onSelectItem,\r\n    onAddExpenseClick,\r\n    loadExpenses,\r\n    editExpense,\r\n    onUpdateClick\r\n  }\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}