{"ast":null,"code":"import _objectSpread from \"F:\\\\expenseeve\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport Axious from \"axios\";\nimport { UpdateBudgetRoute, addCategoryRoute, listCategoryRoute, userLoginRoute, getBudgetRoute, settingsRoute, getSettingsRoute, delCategoryRoute, listActiveCategoryRoute, addNewExpenseRoute, listExpenseRoute, getExpByIdRoute, editExpenseRoute, userCreateRoute } from \"../config/route\";\nimport { CREATE_NEW_USER_SUCCESS, LOGOUT_ACTION, EDIT_ITEAM, EDIT_ITEAM_SUCCESS, EDIT_ITEAM_FAILED, LOADING_EXPENSE_FAILED, LOADING_EXPENSE_SUCCESS, LOADING_EXPENSE, ITEM_ON_CHANGE, POP_ADD_EXPENSE, EXPENSE_ON_CHANGE, BUDGET_CHANGE, CATEGORY_CHANGE, UPDATE_BUDGET_SUCCESS, UPDATE_BUDGET_FAILED, UPDATING_BUDGET, ADDING_CATEGORY, ADD_CATEGORY_FAILED, FETCHING_CATEGORY_LIST, FETCHING_CATEGORY_LIST_FAILED, FETCHING_CATEGORY_LIST_SUCCESS, USER_LOGINING, USER_LOGINING_FAILED, USER_LOGINING_SUCCESS, USER_ID_ON_CHANGE, PASSWORD_ON_CHANGE, INITILIZE_DASHBOARD, INITILIZE_EXPENSE, INITILIZE_SETTINGS, DELETING_CATEGORY, DELETING_CATEGORY_FAILED, FETCHING_ACTIVE_CATEGORY_LIST, FETCHING_ACTIVE_CATEGORY_LIST_FAILED, ON_SELECT_ITEM, ADD_NEW_EXPENSE, ADD_NEW_EXPENSE_FAILED, ADD_NEW_EXPENSE_SUCCESS, CREATE_NEW_USER_FAILE } from \"../config/actionType\";\nexport const budgetOnChange = budget => {\n  return {\n    type: BUDGET_CHANGE,\n    payload: budget\n  };\n};\nexport const categoryOnChange = category => {\n  return {\n    type: CATEGORY_CHANGE,\n    payload: category\n  };\n};\nexport const updateBudget = budget => {\n  console.log(\"[Budget updated thanks]\");\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: UPDATING_BUDGET\n    });\n    Axious.post(UpdateBudgetRoute, {\n      userId: \"sudheergupta@gmnail.com\",\n      budget: budget\n    }).then(response => {\n      console.log(\"Server Respodsfwsnse\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: UPDATE_BUDGET_SUCCESS,\n          payload: serverRes.budget.budget\n        });\n      } else {\n        dispatch({\n          type: UPDATE_BUDGET_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: UPDATE_BUDGET_FAILED,\n        payload: \"Budget updation failed\"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n};\nexport const addCategory = category => {\n  console.log(\"[Budget updated thanks]\");\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: ADDING_CATEGORY\n    });\n    Axious.post(addCategoryRoute, {\n      userId: \"sudheergupta@gmnail.com\",\n      name: category\n    }).then(response => {\n      console.log(\"Add category server response\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: FETCHING_CATEGORY_LIST\n        }); //--------------\n\n        Axious.post(listCategoryRoute).then(response => {\n          if (response.data.success) {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_SUCCESS,\n              payload: response.data.categories\n            });\n          } else {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_FAILED,\n              payload: response.data.details\n            });\n          }\n\n          console.log(\"list find from server--\", response.data);\n        }).catch(function (err) {\n          dispatch({\n            type: FETCHING_CATEGORY_LIST_FAILED,\n            payload: \"Somthing went wrong\"\n          });\n        }); //-------------\n      } else {\n        dispatch({\n          type: ADD_CATEGORY_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: ADD_CATEGORY_FAILED,\n        payload: \"Something went wrong \"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n}; // Login actions\n\nexport const login = (userId, password) => {\n  return dispatch => {\n    dispatch({\n      type: USER_LOGINING\n    });\n    Axious.post(userLoginRoute, {\n      userId: userId,\n      password: password\n    }).then(response => {\n      if (response.data.success) {\n        console.log(\"LoginData\", response.data);\n        dispatch({\n          type: USER_LOGINING_SUCCESS,\n          payload: response.data.userData\n        }); // Initilize Reducers...\n\n        Axious.post(getSettingsRoute).then(response => {\n          console.log(\"[Response for getSetting]\", response.data);\n\n          if (response.data.success) {\n            console.log(\"response.data.settingCompData\", response.data.settingCompData);\n            dispatch({\n              type: INITILIZE_SETTINGS,\n              payload: response.data.settingCompData\n            });\n          }\n        }).catch(function (err) {\n          console.log(\"Filed while loading budget\", err);\n        }); //----------------End here\n        //initializeApp();\n      } else {\n        dispatch({\n          type: USER_LOGINING_FAILED,\n          payload: response.data.details\n        });\n      }\n    }).catch(function (err) {\n      dispatch({\n        type: USER_LOGINING_FAILED,\n        payload: \"Somthing went wrong \"\n      });\n    });\n  };\n};\nexport const userIdOnChnage = userId => {\n  return {\n    type: USER_ID_ON_CHANGE,\n    payload: userId\n  };\n};\nexport const passwordOnChnage = password => {\n  return {\n    type: PASSWORD_ON_CHANGE,\n    payload: password\n  };\n};\nexport const initializeApp = () => {\n  // settingns app\n  //getBalance\n  return dispatch => {\n    Axious.post(getSettingsRoute).then(response => {\n      console.log(\"[Response for getSetting]\", response.data);\n\n      if (response.data.success) {\n        console.log(\"response.data.settingCompData\", response.data.settingCompData);\n        dispatch({\n          type: INITILIZE_SETTINGS,\n          payload: response.data.settingCompData\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"Filed while loading budget\", err);\n    });\n  }; // fetch budget\n  // console.log(\"[Initilizing app 000000000000000000000]\");\n};\nexport const deleteCategory = Id => {\n  console.log(\"[deleteCategory ivokded]  id-\", Id, \"Route-\", delCategoryRoute);\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: DELETING_CATEGORY\n    });\n    Axious.post(delCategoryRoute, {\n      name: Id\n    }).then(response => {\n      console.log(\"Delete category server response\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: FETCHING_CATEGORY_LIST\n        }); //--------------\n\n        Axious.post(listCategoryRoute).then(response => {\n          if (response.data.success) {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_SUCCESS,\n              payload: response.data.categories\n            });\n          } else {\n            dispatch({\n              type: FETCHING_CATEGORY_LIST_FAILED,\n              payload: response.data.details\n            });\n          }\n\n          console.log(\"list find from server--\", response.data);\n        }).catch(function (err) {\n          dispatch({\n            type: FETCHING_CATEGORY_LIST_FAILED,\n            payload: \"Somthing went wrong\"\n          });\n        }); //-------------\n      } else {\n        dispatch({\n          type: DELETING_CATEGORY_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: DELETING_CATEGORY_FAILED,\n        payload: \"Something went wrong \"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n};\nexport const populateActiveCategory = () => {\n  // settingns app\n  //getBalance\n  return dispatch => {\n    Axious.post(listActiveCategoryRoute).then(response => {\n      console.log(\"[activeCategoryList] server response \", response.data);\n\n      if (response.data.success) {\n        console.log(\"response.data.settingCompData\", response.data.settingCompData);\n        dispatch({\n          type: FETCHING_ACTIVE_CATEGORY_LIST,\n          payload: response.data.categories\n        });\n      } else {\n        dispatch({\n          type: FETCHING_ACTIVE_CATEGORY_LIST_FAILED,\n          payload: response.data.details\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"activeCategoryList [Action] failed\", err);\n    });\n  };\n};\nexport const itemOnChnage = item => {\n  return {\n    type: ITEM_ON_CHANGE,\n    payload: item\n  };\n};\nexport const expenseOnChnage = expenseAmount => {\n  return {\n    type: EXPENSE_ON_CHANGE,\n    payload: expenseAmount\n  };\n};\nexport const onSelectItem = item => {\n  return {\n    type: ON_SELECT_ITEM,\n    payload: item\n  };\n};\nexport const onAddExpenseClick = body => {\n  return dispatch => {\n    // do call here and wait for response\n    dispatch({\n      type: ADD_NEW_EXPENSE\n    });\n    Axious.post(addNewExpenseRoute, body).then(response => {\n      console.log(\"ADD_NEW_EXPENSE server response\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: ADD_NEW_EXPENSE_SUCCESS,\n          payload: serverRes.details\n        }); //--------------\n\n        /*  Axious.post(listCategoryRoute)\r\n          .then(response => {\r\n            if (response.data.success) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                payload: response.data.categories\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: response.data.details\r\n              });\r\n            }\r\n              console.log(\"list find from server--\", response.data);\r\n          })\r\n          .catch(function(err) {\r\n            dispatch({\r\n              type: FETCHING_CATEGORY_LIST_FAILED,\r\n              payload: \"Somthing went wrong\"\r\n            });\r\n          }); */\n        //-------------\n      } else {\n        dispatch({\n          type: ADD_NEW_EXPENSE_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: ADD_NEW_EXPENSE_FAILED,\n        payload: \"Something went wrong \"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n};\nexport const loadExpenses = () => {\n  // settingns app\n  //getBalance\n  return dispatch => {\n    dispatch({\n      type: LOADING_EXPENSE\n    });\n    Axious.post(listExpenseRoute).then(response => {\n      console.log(\"[Response for loadExpenses]\", response.data);\n\n      if (response.data.success) {\n        console.log(\"response.data\", response.data);\n        dispatch({\n          type: LOADING_EXPENSE_SUCCESS,\n          payload: response.data.expenses\n        });\n      } else {\n        dispatch({\n          type: LOADING_EXPENSE_FAILED,\n          payload: \"response failed\"\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"Filed while loading budget\", err);\n      dispatch({\n        type: LOADING_EXPENSE_FAILED,\n        payload: \"Somting went wrong\"\n      });\n    });\n  };\n};\nexport const editExpense = id => {\n  console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> editExpense\", id);\n  return dispatch => {\n    dispatch({\n      type: EDIT_ITEAM,\n      payload: true\n    });\n    Axious.post(getExpByIdRoute, {\n      expenseId: id\n    }).then(response => {\n      console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> Res\", response.data);\n\n      if (response.data.success) {\n        console.log(\"response.data\", response.data);\n        dispatch({\n          type: EDIT_ITEAM_SUCCESS,\n          payload: response.data.data\n        });\n      } else {\n        dispatch({\n          type: EDIT_ITEAM_FAILED,\n          payload: response.data.details\n        }); // console.log(\"response.data\", response.data);\n      }\n    }).catch(function (err) {\n      console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> Err\", err);\n      dispatch({\n        type: EDIT_ITEAM_FAILED,\n        payload: \"Somthing went wrong \"\n      });\n    });\n  };\n};\nexport const onUpdateClick = body => {\n  return dispatch => {\n    // do call here and wait for response\n    //dispatch({ type: ADD_NEW_EXPENSE });\n    Axious.post(editExpenseRoute, body).then(response => {\n      console.log(\"ADD Upadet server response\", response.data);\n\n      let serverRes = _objectSpread({}, response.data);\n\n      if (serverRes.success) {\n        dispatch({\n          type: ADD_NEW_EXPENSE_SUCCESS,\n          payload: \"Expense edited successfully\"\n        }); //--------------\n\n        /*  Axious.post(listCategoryRoute)\r\n          .then(response => {\r\n            if (response.data.success) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                payload: response.data.categories\r\n              });\r\n            } else {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: response.data.details\r\n              });\r\n            }\r\n              console.log(\"list find from server--\", response.data);\r\n          })\r\n          .catch(function(err) {\r\n            dispatch({\r\n              type: FETCHING_CATEGORY_LIST_FAILED,\r\n              payload: \"Somthing went wrong\"\r\n            });\r\n          }); */\n        //-------------\n      } else {\n        dispatch({\n          type: ADD_NEW_EXPENSE_FAILED,\n          payload: serverRes.details\n        });\n      }\n    }).catch(function (error) {\n      dispatch({\n        type: ADD_NEW_EXPENSE_FAILED,\n        payload: \"Something went wrong while editing expense  \"\n      });\n      console.log(\"Server Error\", error);\n    });\n  };\n};\nexport const logoutAction = body => {\n  return {\n    type: LOGOUT_ACTION\n  };\n};\nexport const createAccountAction = (userId, password) => {\n  return dispatch => {\n    Axious.post(userCreateRoute, {\n      userId: userId,\n      password: password\n    }).then(response => {\n      if (response.data.success) {\n        console.log(\"LoginData\", response.data);\n        dispatch({\n          type: CREATE_NEW_USER_SUCCESS,\n          payload: response.data.userData\n        });\n      } else {\n        dispatch({\n          type: CREATE_NEW_USER_FAIL,\n          payload: response.data.details\n        });\n      }\n    }).catch(function (err) {\n      dispatch({\n        type: CREATE_NEW_USER_FAILE,\n        payload: \"Somthing went wrong \"\n      });\n    });\n  };\n};","map":{"version":3,"sources":["F:\\expenseeve\\src\\actions\\index.js"],"names":["Axious","UpdateBudgetRoute","addCategoryRoute","listCategoryRoute","userLoginRoute","getBudgetRoute","settingsRoute","getSettingsRoute","delCategoryRoute","listActiveCategoryRoute","addNewExpenseRoute","listExpenseRoute","getExpByIdRoute","editExpenseRoute","userCreateRoute","CREATE_NEW_USER_SUCCESS","LOGOUT_ACTION","EDIT_ITEAM","EDIT_ITEAM_SUCCESS","EDIT_ITEAM_FAILED","LOADING_EXPENSE_FAILED","LOADING_EXPENSE_SUCCESS","LOADING_EXPENSE","ITEM_ON_CHANGE","POP_ADD_EXPENSE","EXPENSE_ON_CHANGE","BUDGET_CHANGE","CATEGORY_CHANGE","UPDATE_BUDGET_SUCCESS","UPDATE_BUDGET_FAILED","UPDATING_BUDGET","ADDING_CATEGORY","ADD_CATEGORY_FAILED","FETCHING_CATEGORY_LIST","FETCHING_CATEGORY_LIST_FAILED","FETCHING_CATEGORY_LIST_SUCCESS","USER_LOGINING","USER_LOGINING_FAILED","USER_LOGINING_SUCCESS","USER_ID_ON_CHANGE","PASSWORD_ON_CHANGE","INITILIZE_DASHBOARD","INITILIZE_EXPENSE","INITILIZE_SETTINGS","DELETING_CATEGORY","DELETING_CATEGORY_FAILED","FETCHING_ACTIVE_CATEGORY_LIST","FETCHING_ACTIVE_CATEGORY_LIST_FAILED","ON_SELECT_ITEM","ADD_NEW_EXPENSE","ADD_NEW_EXPENSE_FAILED","ADD_NEW_EXPENSE_SUCCESS","CREATE_NEW_USER_FAILE","budgetOnChange","budget","type","payload","categoryOnChange","category","updateBudget","console","log","dispatch","post","userId","then","response","data","serverRes","success","details","catch","error","addCategory","name","categories","err","login","password","userData","settingCompData","userIdOnChnage","passwordOnChnage","initializeApp","deleteCategory","Id","populateActiveCategory","itemOnChnage","item","expenseOnChnage","expenseAmount","onSelectItem","onAddExpenseClick","body","loadExpenses","expenses","editExpense","id","expenseId","onUpdateClick","logoutAction","createAccountAction","CREATE_NEW_USER_FAIL"],"mappings":"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","sourcesContent":["import Axious from \"axios\";\r\n\r\nimport {\r\n  UpdateBudgetRoute,\r\n  addCategoryRoute,\r\n  listCategoryRoute,\r\n  userLoginRoute,\r\n  getBudgetRoute,\r\n  settingsRoute,\r\n  getSettingsRoute,\r\n  delCategoryRoute,\r\n  listActiveCategoryRoute,\r\n  addNewExpenseRoute,\r\n  listExpenseRoute,\r\n  getExpByIdRoute,\r\n  editExpenseRoute,\r\n  userCreateRoute\r\n} from \"../config/route\";\r\nimport {\r\n  CREATE_NEW_USER_SUCCESS,\r\n  LOGOUT_ACTION,\r\n  EDIT_ITEAM,\r\n  EDIT_ITEAM_SUCCESS,\r\n  EDIT_ITEAM_FAILED,\r\n  LOADING_EXPENSE_FAILED,\r\n  LOADING_EXPENSE_SUCCESS,\r\n  LOADING_EXPENSE,\r\n  ITEM_ON_CHANGE,\r\n  POP_ADD_EXPENSE,\r\n  EXPENSE_ON_CHANGE,\r\n  BUDGET_CHANGE,\r\n  CATEGORY_CHANGE,\r\n  UPDATE_BUDGET_SUCCESS,\r\n  UPDATE_BUDGET_FAILED,\r\n  UPDATING_BUDGET,\r\n  ADDING_CATEGORY,\r\n  ADD_CATEGORY_FAILED,\r\n  FETCHING_CATEGORY_LIST,\r\n  FETCHING_CATEGORY_LIST_FAILED,\r\n  FETCHING_CATEGORY_LIST_SUCCESS,\r\n  USER_LOGINING,\r\n  USER_LOGINING_FAILED,\r\n  USER_LOGINING_SUCCESS,\r\n  USER_ID_ON_CHANGE,\r\n  PASSWORD_ON_CHANGE,\r\n  INITILIZE_DASHBOARD,\r\n  INITILIZE_EXPENSE,\r\n  INITILIZE_SETTINGS,\r\n  DELETING_CATEGORY,\r\n  DELETING_CATEGORY_FAILED,\r\n  FETCHING_ACTIVE_CATEGORY_LIST,\r\n  FETCHING_ACTIVE_CATEGORY_LIST_FAILED,\r\n  ON_SELECT_ITEM,\r\n  ADD_NEW_EXPENSE,\r\n  ADD_NEW_EXPENSE_FAILED,\r\n  ADD_NEW_EXPENSE_SUCCESS,\r\n  CREATE_NEW_USER_FAILE\r\n} from \"../config/actionType\";\r\n\r\nexport const budgetOnChange = budget => {\r\n  return {\r\n    type: BUDGET_CHANGE,\r\n    payload: budget\r\n  };\r\n};\r\n\r\nexport const categoryOnChange = category => {\r\n  return {\r\n    type: CATEGORY_CHANGE,\r\n    payload: category\r\n  };\r\n};\r\n\r\nexport const updateBudget = budget => {\r\n  console.log(\"[Budget updated thanks]\");\r\n\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: UPDATING_BUDGET });\r\n\r\n    Axious.post(UpdateBudgetRoute, {\r\n      userId: \"sudheergupta@gmnail.com\",\r\n      budget: budget\r\n    })\r\n      .then(response => {\r\n        console.log(\"Server Respodsfwsnse\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: UPDATE_BUDGET_SUCCESS,\r\n            payload: serverRes.budget.budget\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: UPDATE_BUDGET_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: UPDATE_BUDGET_FAILED,\r\n          payload: \"Budget updation failed\"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const addCategory = category => {\r\n  console.log(\"[Budget updated thanks]\");\r\n\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: ADDING_CATEGORY });\r\n\r\n    Axious.post(addCategoryRoute, {\r\n      userId: \"sudheergupta@gmnail.com\",\r\n      name: category\r\n    })\r\n      .then(response => {\r\n        console.log(\"Add category server response\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: FETCHING_CATEGORY_LIST\r\n          });\r\n          //--------------\r\n          Axious.post(listCategoryRoute)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                  payload: response.data.categories\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_FAILED,\r\n                  payload: response.data.details\r\n                });\r\n              }\r\n\r\n              console.log(\"list find from server--\", response.data);\r\n            })\r\n            .catch(function(err) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: \"Somthing went wrong\"\r\n              });\r\n            });\r\n\r\n          //-------------\r\n        } else {\r\n          dispatch({\r\n            type: ADD_CATEGORY_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: ADD_CATEGORY_FAILED,\r\n          payload: \"Something went wrong \"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\n// Login actions\r\nexport const login = (userId, password) => {\r\n  return dispatch => {\r\n    dispatch({ type: USER_LOGINING });\r\n\r\n    Axious.post(userLoginRoute, {\r\n      userId: userId,\r\n      password: password\r\n    })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          console.log(\"LoginData\", response.data);\r\n          dispatch({\r\n            type: USER_LOGINING_SUCCESS,\r\n            payload: response.data.userData\r\n          });\r\n          // Initilize Reducers...\r\n\r\n          Axious.post(getSettingsRoute)\r\n            .then(response => {\r\n              console.log(\"[Response for getSetting]\", response.data);\r\n              if (response.data.success) {\r\n                console.log(\r\n                  \"response.data.settingCompData\",\r\n                  response.data.settingCompData\r\n                );\r\n                dispatch({\r\n                  type: INITILIZE_SETTINGS,\r\n                  payload: response.data.settingCompData\r\n                });\r\n              }\r\n            })\r\n            .catch(function(err) {\r\n              console.log(\"Filed while loading budget\", err);\r\n            });\r\n\r\n          //----------------End here\r\n          //initializeApp();\r\n        } else {\r\n          dispatch({\r\n            type: USER_LOGINING_FAILED,\r\n            payload: response.data.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        dispatch({\r\n          type: USER_LOGINING_FAILED,\r\n          payload: \"Somthing went wrong \"\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const userIdOnChnage = userId => {\r\n  return {\r\n    type: USER_ID_ON_CHANGE,\r\n    payload: userId\r\n  };\r\n};\r\nexport const passwordOnChnage = password => {\r\n  return {\r\n    type: PASSWORD_ON_CHANGE,\r\n    payload: password\r\n  };\r\n};\r\n\r\nexport const initializeApp = () => {\r\n  // settingns app\r\n  //getBalance\r\n  return dispatch => {\r\n    Axious.post(getSettingsRoute)\r\n      .then(response => {\r\n        console.log(\"[Response for getSetting]\", response.data);\r\n        if (response.data.success) {\r\n          console.log(\r\n            \"response.data.settingCompData\",\r\n            response.data.settingCompData\r\n          );\r\n          dispatch({\r\n            type: INITILIZE_SETTINGS,\r\n            payload: response.data.settingCompData\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Filed while loading budget\", err);\r\n      });\r\n  };\r\n\r\n  // fetch budget\r\n  // console.log(\"[Initilizing app 000000000000000000000]\");\r\n};\r\n\r\nexport const deleteCategory = Id => {\r\n  console.log(\"[deleteCategory ivokded]  id-\", Id, \"Route-\", delCategoryRoute);\r\n\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: DELETING_CATEGORY });\r\n\r\n    Axious.post(delCategoryRoute, {\r\n      name: Id\r\n    })\r\n      .then(response => {\r\n        console.log(\"Delete category server response\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: FETCHING_CATEGORY_LIST\r\n          });\r\n          //--------------\r\n          Axious.post(listCategoryRoute)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                  payload: response.data.categories\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_FAILED,\r\n                  payload: response.data.details\r\n                });\r\n              }\r\n\r\n              console.log(\"list find from server--\", response.data);\r\n            })\r\n            .catch(function(err) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: \"Somthing went wrong\"\r\n              });\r\n            });\r\n\r\n          //-------------\r\n        } else {\r\n          dispatch({\r\n            type: DELETING_CATEGORY_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: DELETING_CATEGORY_FAILED,\r\n          payload: \"Something went wrong \"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const populateActiveCategory = () => {\r\n  // settingns app\r\n  //getBalance\r\n  return dispatch => {\r\n    Axious.post(listActiveCategoryRoute)\r\n      .then(response => {\r\n        console.log(\"[activeCategoryList] server response \", response.data);\r\n        if (response.data.success) {\r\n          console.log(\r\n            \"response.data.settingCompData\",\r\n            response.data.settingCompData\r\n          );\r\n          dispatch({\r\n            type: FETCHING_ACTIVE_CATEGORY_LIST,\r\n            payload: response.data.categories\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: FETCHING_ACTIVE_CATEGORY_LIST_FAILED,\r\n            payload: response.data.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"activeCategoryList [Action] failed\", err);\r\n      });\r\n  };\r\n};\r\n\r\nexport const itemOnChnage = item => {\r\n  return {\r\n    type: ITEM_ON_CHANGE,\r\n    payload: item\r\n  };\r\n};\r\nexport const expenseOnChnage = expenseAmount => {\r\n  return {\r\n    type: EXPENSE_ON_CHANGE,\r\n    payload: expenseAmount\r\n  };\r\n};\r\n\r\nexport const onSelectItem = item => {\r\n  return {\r\n    type: ON_SELECT_ITEM,\r\n    payload: item\r\n  };\r\n};\r\n\r\nexport const onAddExpenseClick = body => {\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    dispatch({ type: ADD_NEW_EXPENSE });\r\n\r\n    Axious.post(addNewExpenseRoute, body)\r\n      .then(response => {\r\n        console.log(\"ADD_NEW_EXPENSE server response\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: ADD_NEW_EXPENSE_SUCCESS,\r\n            payload: serverRes.details\r\n          });\r\n\r\n          //--------------\r\n          /*  Axious.post(listCategoryRoute)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                  payload: response.data.categories\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_FAILED,\r\n                  payload: response.data.details\r\n                });\r\n              }\r\n\r\n              console.log(\"list find from server--\", response.data);\r\n            })\r\n            .catch(function(err) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: \"Somthing went wrong\"\r\n              });\r\n            }); */\r\n\r\n          //-------------\r\n        } else {\r\n          dispatch({\r\n            type: ADD_NEW_EXPENSE_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: ADD_NEW_EXPENSE_FAILED,\r\n          payload: \"Something went wrong \"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const loadExpenses = () => {\r\n  // settingns app\r\n  //getBalance\r\n  return dispatch => {\r\n    dispatch({\r\n      type: LOADING_EXPENSE\r\n    });\r\n\r\n    Axious.post(listExpenseRoute)\r\n      .then(response => {\r\n        console.log(\"[Response for loadExpenses]\", response.data);\r\n        if (response.data.success) {\r\n          console.log(\"response.data\", response.data);\r\n          dispatch({\r\n            type: LOADING_EXPENSE_SUCCESS,\r\n            payload: response.data.expenses\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: LOADING_EXPENSE_FAILED,\r\n            payload: \"response failed\"\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Filed while loading budget\", err);\r\n        dispatch({\r\n          type: LOADING_EXPENSE_FAILED,\r\n          payload: \"Somting went wrong\"\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const editExpense = id => {\r\n  console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> editExpense\", id);\r\n  return dispatch => {\r\n    dispatch({\r\n      type: EDIT_ITEAM,\r\n      payload: true\r\n    });\r\n    Axious.post(getExpByIdRoute, { expenseId: id })\r\n      .then(response => {\r\n        console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> Res\", response.data);\r\n        if (response.data.success) {\r\n          console.log(\"response.data\", response.data);\r\n          dispatch({\r\n            type: EDIT_ITEAM_SUCCESS,\r\n            payload: response.data.data\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: EDIT_ITEAM_FAILED,\r\n            payload: response.data.details\r\n          });\r\n          // console.log(\"response.data\", response.data);\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"[ACTION]>>>>>>>>>>>>>>>>>>>>>>>> Err\", err);\r\n        dispatch({\r\n          type: EDIT_ITEAM_FAILED,\r\n          payload: \"Somthing went wrong \"\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const onUpdateClick = body => {\r\n  return dispatch => {\r\n    // do call here and wait for response\r\n    //dispatch({ type: ADD_NEW_EXPENSE });\r\n\r\n    Axious.post(editExpenseRoute, body)\r\n      .then(response => {\r\n        console.log(\"ADD Upadet server response\", response.data);\r\n        let serverRes = { ...response.data };\r\n        if (serverRes.success) {\r\n          dispatch({\r\n            type: ADD_NEW_EXPENSE_SUCCESS,\r\n            payload: \"Expense edited successfully\"\r\n          });\r\n\r\n          //--------------\r\n          /*  Axious.post(listCategoryRoute)\r\n            .then(response => {\r\n              if (response.data.success) {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_SUCCESS,\r\n                  payload: response.data.categories\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: FETCHING_CATEGORY_LIST_FAILED,\r\n                  payload: response.data.details\r\n                });\r\n              }\r\n\r\n              console.log(\"list find from server--\", response.data);\r\n            })\r\n            .catch(function(err) {\r\n              dispatch({\r\n                type: FETCHING_CATEGORY_LIST_FAILED,\r\n                payload: \"Somthing went wrong\"\r\n              });\r\n            }); */\r\n\r\n          //-------------\r\n        } else {\r\n          dispatch({\r\n            type: ADD_NEW_EXPENSE_FAILED,\r\n            payload: serverRes.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        dispatch({\r\n          type: ADD_NEW_EXPENSE_FAILED,\r\n          payload: \"Something went wrong while editing expense  \"\r\n        });\r\n\r\n        console.log(\"Server Error\", error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const logoutAction = body => {\r\n  return {\r\n    type: LOGOUT_ACTION\r\n  };\r\n};\r\n\r\nexport const createAccountAction = (userId, password) => {\r\n  return dispatch => {\r\n    Axious.post(userCreateRoute, {\r\n      userId: userId,\r\n      password: password\r\n    })\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          console.log(\"LoginData\", response.data);\r\n          dispatch({\r\n            type: CREATE_NEW_USER_SUCCESS,\r\n            payload: response.data.userData\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: CREATE_NEW_USER_FAIL,\r\n            payload: response.data.details\r\n          });\r\n        }\r\n      })\r\n      .catch(function(err) {\r\n        dispatch({\r\n          type: CREATE_NEW_USER_FAILE,\r\n          payload: \"Somthing went wrong \"\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}